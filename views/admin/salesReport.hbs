<header class="bg-black text-white p-4 flex justify-between items-center h-16 relative">
  <img src="/images/logo.png" alt="Logo" class="h-48 absolute top-1/2 transform -translate-y-1/2">
</header>

<div class="flex h-screen">
  {{>sidebar}}

  <main class="flex-1 bg-gray-100 p-6 overflow-y-auto">
    <div class="mb-5 px-5">
      <nav class="text-gray-600 text-sm">
        <a href="/admin/dashboard" class="hover:text-yellow-600">Dashboard</a> &gt;
        <a href="/admin/salesReport" class="hover:text-yellow-600">Sales Report</a>
      </nav>
    </div>

    <div class="bg-white p-6 rounded-lg shadow-lg">
      <header class="flex justify-between items-center mb-6">
        <div>
          <h1 class="text-3xl font-bold text-gray-800">Sales Report</h1>
      
        </div>
        <div class="flex gap-4">
          <button onclick="exportPDF()" class="bg-red-600 text-white px-6 py-2 rounded-lg hover:bg-red-700 transition-colors flex items-center gap-2">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
            </svg>
            Export PDF
          </button>
          <button onclick="exportExcel()" class="bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
            </svg>
            Export Excel
          </button>
        </div>
      </header>
      <!-- Filter Controls Section -->
      <div class="bg-gray-50 p-6 rounded-xl shadow-sm border border-gray-200 mb-8">
        <h2 class="text-lg font-semibold text-gray-800 mb-4">Filter Sales Data</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          <!-- Quick Filter -->
          <div class="relative">
            <label class="block text-sm font-medium text-gray-700 mb-2">Quick Filter</label>
            <select id="filterType" class="w-full rounded-lg border-gray-300 shadow-sm focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500 transition-colors">
              <option value="">Select Period</option>
              <option value="day">Today</option>
              <option value="week">This Week</option>
              <option value="month">This Month</option>
            </select>
          </div>
          
          <!-- Start Date -->
          <div class="relative">
            <label class="block text-sm font-medium text-gray-700 mb-2">Start Date</label>
            <input type="date" id="startDate" class="w-full rounded-lg border-gray-300 shadow-sm focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500 transition-colors">
          </div>
          
          <!-- End Date -->
          <div class="relative">
            <label class="block text-sm font-medium text-gray-700 mb-2">End Date</label>
            <input type="date" id="endDate" class="w-full rounded-lg border-gray-300 shadow-sm focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500 transition-colors">
          </div>
          
          <!-- Apply Filter Button -->
          <div class="flex items-end">
            <button onclick="filterOrders()" class="w-full bg-yellow-500 hover:bg-yellow-600 text-white font-medium px-6 py-2.5 rounded-lg shadow-sm transition-colors duration-200 flex items-center justify-center gap-2">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z" />
              </svg>
              Apply Filter
            </button>
          </div>
        </div>
      </div>


      <!-- Summary Cards -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <div class="bg-white p-6 rounded-lg shadow-md border-l-4 border-blue-500 hover:shadow-lg transition-shadow">
          <div class="flex items-center">
            <div class="p-3 bg-blue-100 rounded-full">
              <svg class="w-6 h-6 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
              </svg>
            </div>
            <div class="ml-4">
              <h3 class="text-sm font-medium text-gray-500">Total Orders</h3>
              <p class="text-2xl font-bold text-gray-900" id="totalOrders">{{statistics.totalOrders}}</p>
            </div>
          </div>
        </div>
        
        <div class="bg-white p-6 rounded-lg shadow-md border-l-4 border-green-500 hover:shadow-lg transition-shadow">
          <div class="flex items-center">
            <div class="p-3 bg-green-100 rounded-full">
              <svg class="w-6 h-6 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
            <div class="ml-4">
              <h3 class="text-sm font-medium text-gray-500">Total Revenue</h3>
              <p class="text-2xl font-bold text-gray-900" id="totalRevenue">₹{{statistics.totalRevenue}}</p>
            </div>
          </div>
        </div>
        
        <div class="bg-white p-6 rounded-lg shadow-md border-l-4 border-red-500 hover:shadow-lg transition-shadow">
          <div class="flex items-center">
            <div class="p-3 bg-red-100 rounded-full">
              <svg class="w-6 h-6 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
            <div class="ml-4">
              <h3 class="text-sm font-medium text-gray-500">Total Discount</h3>
              <p class="text-2xl font-bold text-gray-900" id="totalDiscount">₹{{statistics.totalDiscount}}</p>
            </div>
          </div>
        </div>
        
        <div class="bg-white p-6 rounded-lg shadow-md border-l-4 border-purple-500 hover:shadow-lg transition-shadow">
          <div class="flex items-center">
            <div class="p-3 bg-purple-100 rounded-full">
              <svg class="w-6 h-6 text-purple-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z" />
              </svg>
            </div>
            <div class="ml-4">
              <h3 class="text-sm font-medium text-gray-500">Net Revenue</h3>
              <p class="text-2xl font-bold text-gray-900" id="netRevenue">₹{{statistics.netRevenue}}</p>
            </div>
          </div>
        </div>
      </div>

      <!-- Orders Table -->
      <div class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200">
        <div class="p-6 border-b border-gray-200">
          <h2 class="text-lg font-semibold text-gray-700">Order Details</h2>
        </div>
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Order ID</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Customer</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Original Amount</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Discount</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Final Amount</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200" id="ordersTableBody">
              {{#each orders}}
              <tr class="hover:bg-gray-50 transition-colors">
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">{{formatDate this.createdAt}}</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">{{this._id}}</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">{{this.userId.name}}</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">₹{{this.originalAmount}}</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">₹{{this.offerDiscount}}</td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">₹{{this.finalAmount}}</td>
              </tr>
              {{/each}}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </main>
</div>

<footer class="bg-black text-white p-4 mt-6 text-center">
  <p>&copy; 2024 tickLore. All Rights Reserved.</p>
</footer>

<script>
async function filterOrders() {
  const filterType = document.getElementById('filterType').value;
  const startDate = document.getElementById('startDate').value;
  const endDate = document.getElementById('endDate').value;

  try {
    const response = await fetch('/admin/filter-orders', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ filterType, startDate, endDate }),
    });

    const data = await response.json();
    updateTableAndSummary(data);
  } catch (error) {
    console.error('Error filtering orders:', error);
  }
}

function updateTableAndSummary(data) {
  // Update summary cards with animation
  animateCounter('totalOrders', data.orders.length);
  animateCounter('totalRevenue', data.summary.totalOriginal);
  animateCounter('totalDiscount', data.summary.totalOfferDiscount + data.summary.totalCouponDiscount);
  animateCounter('netRevenue', data.summary.totalNet);

  // Update table
  const tableBody = document.getElementById('ordersTableBody');
  tableBody.innerHTML = data.orders.map(order => `
    <tr class="hover:bg-gray-50 transition-colors">
      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${new Date(order.createdAt).toLocaleDateString()}</td>
      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${order._id}</td>
      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${order.userId?.name || 'N/A'}</td>
      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">₹${order.originalAmount.toFixed(2)}</td>
      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">₹${order.offerDiscount.toFixed(2)}</td>
      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">₹${order.finalAmount.toFixed(2)}</td>
    </tr>
  `).join('');
}

function animateCounter(elementId, finalValue) {
  const element = document.getElementById(elementId);
  const startValue = parseInt(element.textContent.replace(/[^0-9.-]+/g, ""));
  const duration = 1000; // Animation duration in milliseconds
  const steps = 20;
  const increment = (finalValue - startValue) / steps;
  
  let currentValue = startValue;
  const interval = duration / steps;
  
  const animation = setInterval(() => {
    currentValue += increment;
    if ((increment > 0 && currentValue >= finalValue) || 
        (increment < 0 && currentValue <= finalValue)) {
      clearInterval(animation);
      currentValue = finalValue;
    }
    element.textContent = elementId.includes('Revenue') || elementId.includes('Discount') 
      ? `₹${currentValue.toFixed(2)}`
      : Math.round(currentValue);
  }, interval);
}

async function exportPDF() {
  const filterType = document.getElementById('filterType').value;
  const startDate = document.getElementById('startDate').value;
  const endDate = document.getElementById('endDate').value;

  const queryParams = new URLSearchParams({
    filterType,
    startDate,
    endDate
  }).toString();

  window.location.href = `/admin/export-sales-pdf?${queryParams}`;
}

async function exportExcel() {
  const filterType = document.getElementById('filterType').value;
  const startDate = document.getElementById('startDate').value;
  const endDate = document.getElementById('endDate').value;

  const queryParams = new URLSearchParams({
    filterType,
    startDate,
    endDate
  }).toString();

  window.location.href = `/admin/export-sales-excel?${queryParams}`;
}

// Reset date inputs when filter type changes
document.getElementById('filterType').addEventListener('change', function() {
  if (this.value) {
    document.getElementById('startDate').value = '';
    document.getElementById('endDate').value = '';
  }
});

// Initialize charts on page load
document.addEventListener('DOMContentLoaded', function() {
  initializeCharts({});
});
</script>
