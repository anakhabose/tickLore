
<header class="bg-black text-white p-4 flex justify-between items-center">
    <div class="text-xl font-bold">Logo</div>
  
  </header>
<div class="flex h-screen">
    {{>sidebar}}
 <main class="flex-1 p-6 bg-white">
      <div class="max-w-4xl mx-auto bg-grey-100 p-6 rounded-lg">
        <h2 class="text-2xl font-bold mb-6">Add Product</h2>
        <form class="space-y-6" method="post" action="products-edit">
           <input type="text" id="message" value="{{{message}}}" name="message" hidden >
          <!-- Product Name and Price -->
          <div class="grid grid-cols-2 gap-6">
            <div>
              <label for="productName" class="block text-sm font-medium text-gray-400 mb-1">
                Product Name*
              </label>
              <input
                id="productName"
                name="productName"
                type="text"
                class="bg-gray-100 border-gray-900 w-full rounded-lg p-2 text-black"
                required
              />
            </div>
            <div>
              <label for="price"  class="block text-sm font-medium text-gray-400 mb-1">
                Price*
              </label>
              <input
                id="price"
                name="price"
                type="number"
               class="bg-gray-100 border-gray-900 w-full rounded-lg p-2 text-black"
                required
              />
            </div>
          </div>

          <!-- Description -->
          <div>
            <label for="description" class="block text-sm font-medium text-gray-400 mb-1">
              Description*
            </label>
            <textarea
              id="description"
              class="bg-gray-100 border-gray-900 w-full rounded-lg p-2 text-black"
              required
            ></textarea>
          </div>

          <!-- Category and Quantity -->
          <div class="grid grid-cols-2 gap-6">
            <div>
              <label for="category" class="block text-sm font-medium text-gray-400 mb-1">
                Category*
              </label>
              <select
                id="category" name="category"
                class="bg-gray-100 border-gray-900 w-full rounded-lg p-2 text-black"
              >
                <option value="" disabled selected>Select category</option>
                <option value="electronics">Analog</option>
                <option value="clothing">Digital</option>
                <option value="books">Smart</option>
              </select>
            </div>
            <div>
              <label for="quantity" class="block text-sm font-medium text-gray-400 mb-1">
                Quantity
              </label>
              <input
                id="stock"
                id="stock"
                type="number"
                class="bg-gray-100 border-gray-900 w-full rounded-lg p-2 text-black"
                min="0"
              />
            </div>
          </div>

          <!-- Product Images -->
       <div>
  <label class="block text-sm font-medium text-gray-400 mb-2">
    Product Images
  </label>

  <!-- Hidden File Input -->
  <input
    type="file"
    id="imageUpload"
    accept="image/*"
    class="hidden"
    multiple
  />

  <!-- Styled Button -->
  <button
    type="button"
    id="uploadButton"
    class="bg-red-500 hover:bg-red-600 text-white py-2 px-4 rounded-lg"
  >
    Add Images
  </button>

  <!-- Preview Area -->
  <div
    id="imagePreview"
    class="grid grid-cols-4 gap-4 mt-4"
  ></div>
</div>


          <!-- Add Product Button -->
          <button
            type="submit"
            class="w-full bg-red-500 hover:bg-red-600 text-white rounded-lg py-2"
          >
            Add Product
          </button>
        </form>
      </div>
    </main>
  </div>
  <!-- Footer -->
<footer class="bg-black text-white p-4 mt-6 text-center">
  <p>&copy; 2024 tickLore. All Rights Reserved.</p>
</footer>
<script>

  // Reference to the hidden file input
  const imageInput = document.getElementById('imageUpload');
  const uploadButton = document.getElementById('uploadButton');
  const imagePreview = document.getElementById('imagePreview');

  // Open file dialog when the button is clicked
  uploadButton.addEventListener('click', () => {
    imageInput.click();
  });

  // Handle image preview when files are selected
  imageInput.addEventListener('change', function (event) {
    const files = event.target.files;

    Array.from(files).forEach(file => {
      if (file.type.startsWith('image/')) {
        const reader = new FileReader();
        reader.onload = function (e) {
          const imgContainer = document.createElement('div');
          imgContainer.classList.add('relative');

          const img = document.createElement('img');
          img.src = e.target.result;
          img.alt = file.name;

          // Apply Tailwind classes to the image
          img.className = 'w-full h-36 object-cover rounded-lg border border-gray-300';

          // Create a remove button
          const removeButton = document.createElement('button');
          removeButton.textContent = 'X';
          removeButton.className =
            'absolute top-0 right-0 bg-red-500 text-white p-1 rounded-full hover:bg-red-600';

          // Event listener to remove the image when the button is clicked
          removeButton.addEventListener('click', () => {
            imgContainer.remove();
          });

          // Append image and remove button to the container
          imgContainer.appendChild(img);
          imgContainer.appendChild(removeButton);

          // Append the container to the preview area
          imagePreview.appendChild(imgContainer);
        };
        reader.readAsDataURL(file);
      }
    });
  });



   document.addEventListener('DOMContentLoaded',function(){
            document.querySelector('form').addEventListener('submit',formValidate);
        });
         const message = document.getElementById('message').value
         if(message){
            swal.fire(message);
        }
        function formValidate(e){
           e.preventDefault(); // Prevent default form submission

  // Retrieve form field values
  var name = document.getElementById('productName').value.trim();
  var price = document.getElementById('price').value.trim();
  var description = document.getElementById('description').value.trim();
  var category = document.getElementById('category').value;
  var stock = document.getElementById('stock').value.trim();
  var images = document.getElementById('imageUpload').files;

  // Validate all required fields
  if (!name) {
    Swal.fire("Product Name is required.");
    return false;
  }
  if (!price || price <= 0) {
    Swal.fire("Price must be greater than zero.");
    return false;
  }
  if (!description) {
    Swal.fire("Description is required.");
    return false;
  }
  if (!category) {
    Swal.fire("Please select a category.");
    return false;
  }
  if (!stock || stock < 0) {
    Swal.fire("Stock must be zero or a positive number.");
    return false;
  }

  // Validate images (if required)
  if (images.length === 0) {
    Swal.fire("At least one product image is required.");
    return false;
  }

  // If all validations pass
  e.target.submit();
  return true;
}
</script>