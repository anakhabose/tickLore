<div class="flex min-h-screen flex-col">
<header class="bg-black text-white p-4 flex justify-between items-center">
   <img src="/images/logo.png" alt="Logo" class="h-8">
  
  </header>
<div class="flex flex-1">
    {{>sidebar}}
 <main class="flex-1 p-6 bg-white">
      <div class="max-w-4xl mx-auto bg-grey-100 p-6 rounded-lg">

        <div class="mb-5 px-5">
        <nav class="text-gray-600 text-sm">
          <a href="/admin/dashboard" class="hover:text-yellow-600">Dashboard</a> &gt;
          <a href="/admin/coupons" class="hover:text-yellow-600">Coupons</a> &gt;
          <span class="font-bold">Edit Coupon</span>
        </nav>
      </div>
      
        <h2 class="text-2xl font-bold mb-6">Add Coupon</h2>
        <form id="addCouponForm" class="space-y-4" method="POST" action="/admin/editCoupons/{{coupon._id}}">
           <input type="text" id="message" value="{{{message}}}" name="message" hidden >
          <!-- Coupon Name and Code -->
          <div class="grid grid-cols-2 gap-6">
            <div>
              <label for="couponName" class="block text-sm font-medium text-gray-400 mb-1">
                Coupon Name*
              </label>
              <input
                id="couponName"
                name="couponName"
                type="text"
                value="{{coupon.couponName}}"
                class="bg-gray-100 border-gray-900 w-full rounded-lg p-2 text-black"
                
              />
            </div>
            <div>
              <label for="couponCode" class="block text-sm font-medium text-gray-400 mb-1">
                Coupon Code*
              </label>
              <input
                id="couponCode"
                name="couponCode"
                type="text"
                value="{{coupon.couponCode}}"
                class="bg-gray-100 border-gray-900 w-full rounded-lg p-2 text-black"
                
              />
            </div>
          </div>

          <!-- Discount and Minimum Purchase -->
          <div class="grid grid-cols-2 gap-6">
            <div>
              <label for="discount" class="block text-sm font-medium text-gray-400 mb-1">
                Discount Amount*
              </label>
              <input
                id="discount"
                name="discount"
                type="number"
                min="1"
                max="90"
                value="{{coupon.discount}}"
                class="bg-gray-100 border-gray-900 w-full rounded-lg p-2 text-black"
                
              />
            </div>
            <div>
              <label for="minPurchaseAmount" class="block text-sm font-medium text-gray-400 mb-1">
                Minimum Purchase Amount*
              </label>
              <input
                id="minPurchaseAmount"
                name="minPurchaseAmount"
                type="number"
                min="1"
                value="{{coupon.minPurchaseAmount}}"
                class="bg-gray-100 border-gray-900 w-full rounded-lg p-2 text-black"
                
              />
            </div>
          </div>

          <!-- Start Date and End Date -->
          <div class="grid grid-cols-2 gap-6">
            <div>
              <label for="startDate" class="block text-sm font-medium text-gray-400 mb-1">
                Start Date*
              </label>
              <input
                id="startDate"
                name="startDate"
                type="date"
                value="{{coupon.startDate}}"
                class="bg-gray-100 border-gray-900 w-full rounded-lg p-2 text-black"
                
              />
            </div>
            <div>
              <label for="endDate" class="block text-sm font-medium text-gray-400 mb-1">
                End Date*
              </label>
              <input
                id="endDate"
                name="endDate"
                type="date"
                value="{{coupon.endDate}}"
                class="bg-gray-100 border-gray-900 w-full rounded-lg p-2 text-black"
                
              />
            </div>
          </div>

          <!-- Usage Per User -->
          <div class="grid grid-cols-2 gap-6">
            <div>
              <label for="usagePerUser" class="block text-sm font-medium text-gray-400 mb-1">
                Usage Per User*
              </label>
              <input
                id="usagePerUser"
                name="usagePerUser"
                type="number"
                min="1"
                value="{{coupon.maxUsagePerUser}}"
                class="bg-gray-100 border-gray-900 w-full rounded-lg p-2 text-black"
              />
            </div>
          </div>

          <!-- Update Coupon Button -->
          <button
            type="submit"
            class="w-full bg-red-500 hover:bg-red-600 text-white rounded-lg py-2"
          >
            Update Coupon
          </button>
        </form>
      </div>
    </main>
  </div>
  <!-- Footer -->
<footer class="bg-black text-white p-4 mt-6 text-center">
  <p>&copy; 2024 tickLore. All Rights Reserved.</p>
</footer>
</div>
<!-- Image Crop Modal -->
<div id="cropModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden">
    <div class="bg-white p-4 rounded-lg">
        <div class="w-96 h-96">
            <img id="cropImage" class="max-w-full max-h-full">
        </div>
        <div class="mt-4 flex justify-end space-x-2">
            <button id="cancelCrop" class="bg-gray-500 text-white px-4 py-2 rounded">Cancel</button>
            <button id="saveCrop" class="bg-blue-500 text-white px-4 py-2 rounded">Save</button>
        </div>
    </div>
</div>

<script>
document.getElementById('addCouponForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = {
        couponName: document.getElementById('couponName').value.trim(),
        couponCode: document.getElementById('couponCode').value.trim(),
        discount: document.getElementById('discount').value,
        minPurchaseAmount: document.getElementById('minPurchaseAmount').value,
        startDate: document.getElementById('startDate').value,
        endDate: document.getElementById('endDate').value,
        usagePerUser: document.getElementById('usagePerUser').value
    };

    // Validation checks
    if (!formData.couponName) {
        Swal.fire({
            icon: 'error',
            title: 'Validation Error',
            text: 'Please enter a coupon name'
        });
        return;
    }

    if (formData.couponName.length < 3 || formData.couponName.length > 50) {
        Swal.fire({
            icon: 'error',
            title: 'Validation Error',
            text: 'Coupon name must be between 3 and 50 characters'
        });
        return;
    }

    if (!formData.couponCode) {
        Swal.fire({
            icon: 'error',
            title: 'Validation Error',
            text: 'Please enter a coupon code'
        });
        return;
    }

    if (!formData.couponCode.match(/^[A-Z0-9]{4,20}$/)) {
        Swal.fire({
            icon: 'error',
            title: 'Invalid Coupon Code',
            text: 'Coupon code must be 4-20 characters long and contain only uppercase letters and numbers'
        });
        return;
    }

    if (!formData.discount) {
        Swal.fire({
            icon: 'error',
            title: 'Validation Error',
            text: 'Please enter a discount amount'
        });
        return;
    }

    const discountValue = parseInt(formData.discount);
    if (discountValue < 1 || discountValue > 90) {
        Swal.fire({
            icon: 'error',
            title: 'Invalid Discount',
            text: 'Discount must be between 1 and 90'
        });
        return;
    }

    if (!formData.minPurchaseAmount) {
        Swal.fire({
            icon: 'error',
            title: 'Validation Error',
            text: 'Please enter a minimum purchase amount'
        });
        return;
    }

    const minPurchaseValue = parseInt(formData.minPurchaseAmount);
    if (minPurchaseValue < 1) {
        Swal.fire({
            icon: 'error',
            title: 'Invalid Amount',
            text: 'Minimum purchase amount must be at least 1'
        });
        return;
    }

    if (!formData.startDate) {
        Swal.fire({
            icon: 'error',
            title: 'Validation Error',
            text: 'Please select a start date'
        });
        return;
    }

    if (!formData.endDate) {
        Swal.fire({
            icon: 'error',
            title: 'Validation Error',
            text: 'Please select an end date'
        });
        return;
    }

    if (!formData.usagePerUser) {
        Swal.fire({
            icon: 'error',
            title: 'Validation Error',
            text: 'Please enter usage per user limit'
        });
        return;
    }

    const usagePerUserValue = parseInt(formData.usagePerUser);
    if (usagePerUserValue < 1) {
        Swal.fire({
            icon: 'error',
            title: 'Invalid Usage Limit',
            text: 'Usage per user must be at least 1'
        });
        return;
    }

    // Date validations
    const startDate = new Date(formData.startDate);
    const endDate = new Date(formData.endDate);
    const today = new Date();
    today.setHours(0, 0, 0, 0);

    if (startDate < today) {
        Swal.fire({
            icon: 'error',
            title: 'Invalid Start Date',
            text: 'Start date cannot be in the past'
        });
        return;
    }

    if (endDate <= startDate) {
        Swal.fire({
            icon: 'error',
            title: 'Invalid End Date',
            text: 'End date must be after start date'
        });
        return;
    }

    try {
        const formElement = document.getElementById('addCouponForm');
        const couponId = formElement.action.split('/').pop();
        
        const response = await fetch(`/admin/editCoupons/${couponId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        });

        const data = await response.json();

        if (data.status) {
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'Coupon updated successfully!'
            }).then(() => {
                window.location.href = '/admin/coupons';
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: data.message || 'An error occurred while updating the coupon'
            });
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred while updating the coupon'
        });
    }
});
</script>  