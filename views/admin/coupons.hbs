
 <header class="bg-black text-white p-4 flex justify-between items-center h-16 relative">
    <img src="/images/logo.png" alt="Logo" class="h-48 absolute top-1/2 transform -translate-y-1/2">
  </header>
  <div class="flex h-screen">
    {{>sidebar}}

    <main class="flex-1 bg-white p-6 overflow-y-auto">
      <div class="mb-5 px-5">
        <nav class="text-gray-600 text-sm">
          <a href="/admin/dashboard" class="hover:text-yellow-600">Dashboard</a> &gt;
          <a href="/admin/coupons" class="hover:text-yellow-600">Coupons</a> &gt;
          <span class="font-bold">All Coupons</span>
        </nav>
</div>

<header class="flex justify-between items-center mb-6">
  <h1 class="text-2xl font-bold">Coupons</h1>
</header>



<div class="flex justify-between items-center mb-4">
 <div class="relative">
   <form id="searchForm" action="/admin/coupons" method="GET">
  <input
    type="text"
    name="search"
    value="{{search}}" 
    class="border border-gray-300 rounded-full px-4 py-2 text-sm"
    placeholder="Search by name"
  />
</form>

  </div>
</div>


<div class="mt-6 bg-white shadow-md rounded-lg overflow-hidden">
  <table class="w-full table-auto border-collapse">

    <thead>
      <tr class="bg-gray-100 text-gray-700">
        <th class="px-4 py-2 text-left border-b border-gray-300">Coupon Name</th>
        <th class="px-4 py-2 text-left border-b border-gray-300">Coupon Code</th>
        <th class="px-4 py-2 text-left border-b border-gray-300">Start Date</th>
        <th class="px-4 py-2 text-left border-b border-gray-300">End Date</th>
        <th class="px-4 py-2 text-left border-b border-gray-300">Status</th>
        <th class="px-4 py-2 text-left border-b border-gray-300">Actions</th>
      </tr>
    </thead>


    <tbody>
      {{#each coupons}}
      <tr class="hover:bg-gray-100 transition duration-200">
        <td class="px-4 py-2 border-b border-gray-300 align-middle">
          <div class="flex items-center space-x-4">
            <span>{{this.couponName}}</span>
          </div>
        </td>
        <td class="px-4 py-2 border-b border-gray-300 align-middle">
          <div class="flex items-center space-x-4">
            <span>{{this.couponCode}}</span>
          </div>
        </td>
        <td class="px-4 py-2 border-b border-gray-300 align-middle">
          {{formatDate this.startDate}}
        </td>
        <td class="px-4 py-2 border-b border-gray-300 align-middle">
          {{formatDate this.endDate}}
        </td>
        <td class="px-4 py-2 border-b border-gray-300 align-middle">
          {{#if this.isBlock}}
            <span class="bg-red-200 text-red-600 px-2 py-1 rounded-lg">Blocked</span>
          {{else}}
            {{#if (eq this.status 'Active')}}
              <span class="bg-green-200 text-green-600 px-2 py-1 rounded-lg">Active</span>
            {{else if (eq this.status 'Expired')}}
              <span class="bg-gray-200 text-gray-600 px-2 py-1 rounded-lg">Expired</span>
            {{else}}
              <span class="bg-yellow-200 text-yellow-600 px-2 py-1 rounded-lg">Inactive</span>
            {{/if}}
          {{/if}}
        </td>
        <td class="px-4 py-2 border-b border-gray-300 align-middle">
          <div class="flex space-x-2">
            <form action="/admin/editCoupons/{{this._id}}" method="GET">
              <button class="bg-yellow-500 hover:bg-yellow-600 text-black px-3 py-1 rounded-md w-24">
                Edit
              </button>
            </form>
            {{#if this.isBlock}}
              <button class="bg-green-500 hover:bg-green-600 text-white px-3 py-1 rounded-md w-24" onclick="unblockCoupon('{{this._id}}')">
                Unblock
              </button>
            {{else}}
              <button class="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded-md w-24" onclick="blockCoupon('{{this._id}}')">
                Block
              </button>
            {{/if}}
          </div>
        </td>
       

      </tr>
      {{/each}}
    </tbody>
  </table>
 
  <div class="p-4 flex items-center justify-between border-t border-gray-200">
    <div class="flex items-center">
      <p class="text-sm text-gray-700">
        Showing <span class="font-medium">{{startIndex}}</span> to <span class="font-medium">{{endIndex}}</span> of
        <span class="font-medium">{{totalCoupons}}</span> coupons
      </p>
    </div>
    <div class="flex justify-end space-x-2">
      {{#if hasPrevPage}}
        <a href="/admin/coupons?page={{prevPage}}{{#if search}}&search={{search}}{{/if}}" 
           class="px-3 py-1 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300">
          Previous
        </a>
      {{/if}}
      
      {{#each (range 1 totalPages)}}
        <a href="/admin/coupons?page={{this}}{{#if ../search}}&search={{../search}}{{/if}}"
           class="px-3 py-1 rounded-md {{#if (eq this ../currentPage)}}bg-yellow-500 text-white{{else}}bg-gray-200 text-gray-700 hover:bg-gray-300{{/if}}">
          {{this}}
        </a>
      {{/each}}
      
      {{#if hasNextPage}}
        <a href="/admin/coupons?page={{nextPage}}{{#if search}}&search={{search}}{{/if}}" 
           class="px-3 py-1 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300">
          Next
        </a>
      {{/if}}
    </div>
  </div>

  <div class="p-4 flex justify-end">
    <a href="/admin/addCoupons">
      <button class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md">
        Add New coupon
      </button>
    </a>
  </div>
</div>

    </main>
  </div>
<footer class="bg-black text-white p-4 mt-6 text-center">
  <p>&copy; 2024 tickLore. All Rights Reserved.</p>
</footer>


  <script>
 let debounceTimer;
   const searchInput = document.querySelector('input[name="search"]');
   const userTable = document.querySelector('.user-table tbody');

   searchInput.addEventListener('input', () => {
       clearTimeout(debounceTimer);
       debounceTimer = setTimeout(() => {
           document.getElementById('searchForm').submit();
       }, 300);
   });
   



  Swal.fire({
    title: 'Confirm Deletion',
    text: "Do you really want to delete this product?",
    icon: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#d33',
    cancelButtonColor: '#FACC15',
    confirmButtonText: 'Delete',
    cancelButtonText: 'Cancel',
  }).then((result) => {
    if (result.isConfirmed) {
      // Show a loading popup while the request is being processed
      Swal.fire({
        title: 'Deleting...',
        text: 'Please wait while we delete the product.',
        icon: 'info',
        showConfirmButton: false,
        allowOutsideClick: false,
      });

      // Proceed with deletion
      fetch(`/admin/deleteProduct/${productId}`, { method: "post" })
        .then(response => response.json())
        .then(result => {
          if (result.status) {
            Swal.fire({
              icon: 'success',
              title: 'Deleted',
              text: 'The product has been successfully deleted.',
              confirmButtonText: 'OK',
            }).then(() => {
              // Reload the page after user confirms
              location.reload();
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Deletion Failed',
              text: result.message || 'Unable to delete the product. Please try again.',
              confirmButtonText: 'OK',
            });
          }
        })
        .catch(() => {
          Swal.fire({
            icon: 'error',
            title: 'Error Occurred',
            text: 'Something went wrong. Please try again later.',
            confirmButtonText: 'OK',
          });
        });
    }
  });


    function blockCoupon(couponId) {
        Swal.fire({
            title: 'Confirm Block',
            text: "Are you sure you want to block this coupon?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Block'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/admin/blockCoupon/${couponId}`, { 
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.status) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: data.message
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message
                        });
                    }
                })
                .catch(error => {
                    console.error('Block error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Something went wrong!'
                    });
                });
            }
        });
    }

    function unblockCoupon(couponId) {
        Swal.fire({
            title: 'Confirm Unblock',
            text: "Are you sure you want to unblock this coupon?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Unblock'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/admin/unblockCoupon/${couponId}`, { 
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.status) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: data.message
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message
                        });
                    }
                })
                .catch(error => {
                    console.error('Unblock error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Something went wrong!'
                    });
                });
            }
        });
    }
</script>
