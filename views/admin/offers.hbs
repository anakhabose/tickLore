
  <header class="bg-black text-white p-4 flex justify-between items-center h-16 relative">
    <img src="/images/logo.png" alt="Logo" class="h-48 absolute top-1/2 transform -translate-y-1/2">
  </header>
  <div class="flex h-screen">
    {{>sidebar}}

    <main class="flex-1 bg-white p-6 overflow-y-auto">
      <div class="mb-5 px-5">
        <nav class="text-gray-600 text-sm">
          <a href="/admin/dashboard" class="hover:text-yellow-600">Dashboard</a> &gt;
          <a href="/admin/offers" class="hover:text-yellow-600">Offers</a> &gt;
          <span class="font-bold">All Offers</span>
        </nav>
</div>

<header class="flex justify-between items-center mb-6">
  <h1 class="text-2xl font-bold">Offers</h1>
</header>



<div class="flex justify-between items-center mb-4">
 <div class="relative">
   <form id="searchForm" action="/admin/offers" method="GET">
  <input
    type="text"
    name="search"
    value="{{search}}" 
    class="border border-gray-300 rounded-full px-4 py-2 text-sm"
    placeholder="Search by name"
  />
</form>

  </div>
</div>


<div class="mt-6 bg-white shadow-md rounded-lg overflow-hidden">
  <table class="w-full table-auto border-collapse">

    <thead>
      <tr class="bg-gray-100 text-gray-700">
        <th class="px-4 py-2 text-left border-b border-gray-300">Offer Title</th>
        <th class="px-4 py-2 text-left border-b border-gray-300">Apply Offer To</th>
        <th class="px-4 py-2 text-left border-b border-gray-300">Start Date</th>
        <th class="px-4 py-2 text-left border-b border-gray-300">End Date</th>
        <th class="px-4 py-2 text-left border-b border-gray-300">Status</th>
        <th class="px-4 py-2 text-left border-b border-gray-300">Actions</th>
      </tr>
    </thead>


    <tbody>
      {{#if offers.length}}
        {{#each offers}}
        <tr class="hover:bg-gray-100 transition duration-200">
          <td class="px-4 py-2 border-b border-gray-300 align-middle">
            <div class="flex items-center space-x-4">
              <span>{{this.offerTitle}}</span>
            </div>
          </td>
          <td class="px-4 py-2 border-b border-gray-300 align-middle">
            <div class="flex items-center space-x-4">
              <span>{{this.offerType}}</span>
            </div>
          </td>
          <td class="px-4 py-2 border-b border-gray-300 align-middle">
            {{formatDate this.startDate}}
          </td>
          <td class="px-4 py-2 border-b border-gray-300 align-middle">
            {{formatDate this.endDate}}
          </td>
          <td class="px-4 py-2 border-b border-gray-300 align-middle">
            {{#if this.isActive}}
              <span class="bg-green-200 text-green-600 px-2 py-1 rounded-lg">Active</span>
            {{else}}
              <span class="bg-red-200 text-red-600 px-2 py-1 rounded-lg">Blocked</span>
            {{/if}}
          </td>
          <td class="px-4 py-2 border-b border-gray-300 align-middle">
            <div class="flex space-x-2">
              <a href="/admin/editOffers/{{this._id}}">
                <button class="bg-yellow-500 hover:bg-yellow-600 text-black px-3 py-1 rounded-md w-24">
                  Edit
                </button>
              </a>
              <button 
                class="{{#if this.isActive}}bg-red-500 hover:bg-red-600{{else}}bg-green-500 hover:bg-green-600{{/if}} text-white px-3 py-1 rounded-md w-24" 
                onclick="toggleOfferStatus('{{this._id}}', {{this.isActive}})"
              >
                {{#if this.isActive}}Block{{else}}Unblock{{/if}}
              </button>
            </div>
          </td>
        </tr>
        {{/each}}
      {{else}}
        <tr>
          <td colspan="6" class="text-center py-5 text-gray-500">No offers found</td>
        </tr>
      {{/if}}
    </tbody>
  </table>
 
  <div class="p-4 flex items-center justify-between border-t border-gray-200">
    <div class="flex items-center">
      <p class="text-sm text-gray-700">
        Showing <span class="font-medium">{{startIndex}}</span> to <span class="font-medium">{{endIndex}}</span> of
        <span class="font-medium">{{totalOffers}}</span> offers
      </p>
    </div>
    <div class="flex justify-end space-x-2">
      {{#if hasPrevPage}}
        <a href="/admin/offers?page={{prevPage}}{{#if search}}&search={{search}}{{/if}}" 
           class="px-3 py-1 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300">
          Previous
        </a>
      {{/if}}
      
      {{#each (range 1 totalPages)}}
        <a href="/admin/offers?page={{this}}{{#if ../search}}&search={{../search}}{{/if}}"
           class="px-3 py-1 rounded-md {{#if (eq this ../currentPage)}}bg-yellow-500 text-white{{else}}bg-gray-200 text-gray-700 hover:bg-gray-300{{/if}}">
          {{this}}
        </a>
      {{/each}}
      
      {{#if hasNextPage}}
        <a href="/admin/offers?page={{nextPage}}{{#if search}}&search={{search}}{{/if}}" 
           class="px-3 py-1 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300">
          Next
        </a>
      {{/if}}
    </div>
  </div>

  <div class="p-4 flex justify-end">
    <a href="/admin/addOffer">
      <button class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md">
        Add New Offer
      </button>
    </a>
  </div>
</div>

    </main>
  </div>
<footer class="bg-black text-white p-4 mt-6 text-center">
  <p>&copy; 2024 tickLore. All Rights Reserved.</p>
</footer>


  <script>
  // Search functionality with debouncing
  let debounceTimer;
  const searchInput = document.querySelector('input[name="search"]');
  
  searchInput.addEventListener('input', () => {
    clearTimeout(debounceTimer);
    debounceTimer = setTimeout(() => {
      document.getElementById('searchForm').submit();
    }, 300);
  });

  // Toggle offer status function
  function toggleOfferStatus(offerId, isActive) {
    const action = isActive ? 'block' : 'unblock';
    const buttonColor = isActive ? '#d33' : '#3085d6';
    
    Swal.fire({
      title: `Confirm ${action}`,
      text: `Are you sure you want to ${action} this offer?`,
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: buttonColor,
      cancelButtonColor: isActive ? '#3085d6' : '#d33',
      confirmButtonText: action.charAt(0).toUpperCase() + action.slice(1)
    }).then((result) => {
      if (result.isConfirmed) {
        fetch(`/admin/${action}Offer/${offerId}`, { 
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json'
          }
        })
        .then(response => response.json())
        .then(data => {
          if (data.status) {
            Swal.fire({
              icon: 'success',
              title: 'Success',
              text: data.message,
              showConfirmButton: false,
              timer: 1500
            }).then(() => {
              location.reload();
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: data.message
            });
          }
        })
        .catch(error => {
          console.error('Error:', error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Something went wrong!'
          });
        });
      }
    });
  }
</script>
