  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<!-- Header -->
<header class="bg-black text-white shadow-sm border-b border-gray-800 h-20">
    <div class="container mx-auto px-4 h-full">
      <div class="flex justify-between items-center h-full">
        <div class="flex items-center">
     <img src="/images/logo.png" alt="Logo" class="w-64 h-64 ">
    </div>
        <nav>
          <ul class="flex items-center space-x-8 text-sm font-medium">
            <li>
              <a href="/user/login" 
                 class="text-white hover:text-yellow-500 transition-colors duration-200">
                LOGIN
              </a>
            </li>
            <li>
              <a href="/user/signup" 
                 class="text-yellow-300 hover:text-yellow-500 transition-colors duration-200">
                SIGNUP
              </a>
            </li>
          </ul>
        </nav>
      </div>
    </div>
  </header>

  <!-- Main Content -->
  <main class="container mx-auto py-10 flex flex-col md:flex-row items-center">
    <div class="w-1/2 md:w-1/2 mb-6">
      <img src="/images/signupImage.jpg" alt="Image Description" 
           class="w-full h-[600px] object-cover object-center rounded-lg"
           style="height: 600px !important;"
      >
    </div>

    <!-- Form Section -->
    <div class="md:w-1/2 p-6 bg-white rounded-xl shadow-2xl mx-4">
      <h2 class="text-2xl font-bold mb-1 text-gray-800">Create an account</h2>
      <p class="mb-4 text-sm text-gray-600">Enter your details below</p>
      
      <form class="space-y-3">
        <div class="space-y-1">
          <label for="name" class="text-sm font-medium text-gray-700">Full Name</label>
          <input type="text" id="name" name="name" placeholder="Enter your name" 
                 class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:border-transparent transition-all duration-300">
        </div>

        <div class="space-y-1">
          <label for="email" class="text-sm font-medium text-gray-700">Email Address</label>
          <input type="email" id="email" name="email" placeholder="Enter your email" 
                 class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:border-transparent transition-all duration-300">
        </div>

        <div class="space-y-1">
          <label for="password" class="text-sm font-medium text-gray-700">Password</label>
          <div class="relative">
            <input type="password" id="password" name="password" placeholder="Enter your password" 
                   class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:border-transparent transition-all duration-300">
            <button type="button" id="togglePassword" class="absolute inset-y-0 right-0 px-3 flex items-center text-gray-600 hover:text-gray-800">
              <i id="eyeIcon" class="fas fa-eye"></i>
            </button>
          </div>
        </div>

        <div class="space-y-1">
          <label for="confirmPassword" class="text-sm font-medium text-gray-700">Confirm Password</label>
          <input type="password" id="confirmPassword" name="confirmPassword" placeholder="Confirm your password" 
                 class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:border-transparent transition-all duration-300">
        </div>

        <button type="submit" class="w-full bg-yellow-500 text-white py-2 rounded-lg hover:bg-yellow-600 transform hover:scale-[1.02] transition-all duration-300 font-semibold">
          Create Account
        </button>
      </form>

      <button class="w-full border mt-4 py-2 rounded-lg flex items-center justify-center space-x-2 hover:bg-gray-50 transition-all duration-300">
        <img src="/images/google.png" alt="Google Icon" class="h-5">
        <a href="/user/auth/google" class="text-gray-700 font-medium">Continue with Google</a>
      </button>

      <p class="text-center mt-3 text-sm text-gray-600">
        Already have an account? 
        <a href="/user/login" class="text-yellow-500 hover:text-yellow-600 font-medium">Log in</a>
      </p>
    </div>
  </main>

  <script>

    document.getElementById('togglePassword').addEventListener('click', function () {
      const passwordField = document.getElementById('password');
      const eyeIcon = document.getElementById('eyeIcon');

      // Toggle the password field type
      if (passwordField.type === 'password') {
        passwordField.type = 'text';
        eyeIcon.classList.remove('fa-eye');
        eyeIcon.classList.add('fa-eye-slash');  
      } else {
        passwordField.type = 'password';
        eyeIcon.classList.remove('fa-eye-slash');
        eyeIcon.classList.add('fa-eye');  
      }
    });
    document.addEventListener('DOMContentLoaded',function(){
            document.querySelector('form').addEventListener('submit',submit);
        });
    function submit(event){
  
      event.preventDefault();
      const name = document.getElementById('name').value;
      const email = document.getElementById('email').value;
      const password = document.getElementById('password').value;
      const confirmPassword = document.getElementById('confirmPassword').value;  

       if (!name || !email || !password || !confirmPassword) {
            Swal.fire({
              title: 'Error!',
              text: 'All fields are required!',
              icon: 'error',
              confirmButtonText: 'OK'
          });
            return;
          }

     if (!isValidEmail(email)) {
           Swal.fire({
               title: 'Invalid Email!',
              text: 'Please enter a valid email address!',
              icon: 'warning',
                confirmButtonText: 'Try Again'
            });
           return;
        }
        if (!isValidPassword(password)) {
                Swal.fire("Password must be strong");
            return false;
            }
         if(password !== confirmPassword) {
          Swal.fire({
           title: 'Error!',
           text: 'Passwords do not match!',
           icon: 'error',
           confirmButtonText: 'OK'
       });
       return;
      }
   function isValidEmail(email) {
                const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                return regex.test(email);
            }
    function isValidPassword(password) {
        // Modified regex to be more permissive with special characters
        const strongPasswordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*(),.?":{}|<>])[A-Za-z\d!@#$%^&*(),.?":{}|<>]{8,}$/;

        if (!strongPasswordRegex.test(password)) {
            Swal.fire({
                title: 'Invalid Password',
                html: 'Password must contain:<br>' +
                      '- At least 8 characters<br>' +
                      '- At least one uppercase letter<br>' +
                      '- At least one lowercase letter<br>' +
                      '- At least one number<br>' +
                      '- At least one special character',
                icon: 'warning',
                confirmButtonText: 'OK'
            });
            return false;
        }
        return true;
    }

     fetch('/user/signup',{
                headers: {
                "Content-Type": "application/json", 
                },
                method:"POST",
                body:JSON.stringify({
                    name:name,
                    email:email,
                    password:password
                })
            }).then(response=> response.json()).then(data=>{
                if(data.status){
                    window.location.href=`/user/otp?email=${encodeURIComponent(email)}`;
              
                }else{
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: data.message || 'Something went wrong!'
                     });
                }
            }).catch(error =>{
                console.log("Error : ",error);
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong! Please try again.'
                });
            });
    }
   
    // Remove or comment out this function as it's not needed
    /*
    function handleGoogleResponse(response) {
        if (!response.status) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: response.message
            });
        } else {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: response.message,
                timer: 1500
            }).then(() => {
                window.location.href = response.redirect;
            });
        }
    }
    */

    document.addEventListener('DOMContentLoaded', function() {
        // Check for any error messages in URL parameters
        const urlParams = new URLSearchParams(window.location.search);
        const error = urlParams.get('error');
        const googleError = urlParams.get('googleError');

        if (googleError === 'exists') {
            Swal.fire({
                title: 'Account Already Exists',
                text: 'An account with this email already exists. Please login instead.',
                icon: 'info',
                showCancelButton: true,
                confirmButtonText: 'Go to Login',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/user/login';
                }
            });
        } else if (error) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: error
            });
        }
    });

  </script>