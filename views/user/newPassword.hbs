<body class="min-h-screen flex items-center justify-center bg-gray-50/50 p-4">
    <!-- Reset Password Form -->
    <div class="w-full max-w-md bg-white shadow-lg rounded-lg">
        <div class="p-6">
            <h2 class="text-xl font-semibold text-center mb-6">Reset Password</h2>
            <form id="resetPasswordForm" class="space-y-4">
                <input type="hidden" id="email" value="{{email}}" />
                <div class="space-y-2">
                    <label for="newPassword" class="block text-sm font-medium text-gray-700">New Password</label>
                    <div class="relative">
                        <input type="password" id="newPassword" name="newPassword"
                            class="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500"
                            required />
                        <button type="button" class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700" onclick="togglePassword('newPassword')">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                </div>
                <div class="space-y-2">
                    <label for="confirmPassword" class="block text-sm font-medium text-gray-700">Confirm Password</label>
                    <input type="password" id="confirmPassword" name="confirmPassword"
                        class="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500"
                        required />
                </div>
                <button type="submit" class="w-full py-2 bg-yellow-500 text-white rounded-md hover:bg-yellow-600">
                    Reset Password
                </button>
            </form>
        </div>
    </div>

    <script>
        function togglePassword(inputId) {
            const input = document.getElementById(inputId);
            const button = input.nextElementSibling;
            const icon = button.querySelector('i');
            
            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                input.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }

        document.getElementById('resetPasswordForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            const email = document.getElementById('email').value;
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;

            // Check password strength
            const strongPasswordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
            if (!strongPasswordRegex.test(newPassword)) {
                Swal.fire({
                    title: 'Invalid Password',
                    html: 'Password must contain:<br>' +
                          '- At least 8 characters<br>' +
                          '- At least one uppercase letter<br>' +
                          '- At least one lowercase letter<br>' +
                          '- At least one number<br>' +
                          '- At least one special character (@$!%*?&)',
                    icon: 'warning',
                    confirmButtonText: 'OK'
                });
                return;
            }

            // Check if passwords match
            if (newPassword !== confirmPassword) {
                Swal.fire({
                    icon: 'error',
                    title: 'Passwords Do Not Match',
                    text: 'New password and confirm password must be the same'
                });
                return;
            }

            try {
                const response = await fetch('/user/reset-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        email,
                        newPassword
                    })
                });

                const data = await response.json();

                if (response.ok) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'Your password has been reset successfully'
                    }).then(() => {
                        window.location.href = '/user/login';
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Failed to reset password. Please try again.'
                    });
                }
            } catch (error) {
                console.error('Password reset error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Unable to connect to the server. Please check your internet connection and try again.'
                });
            }
        });
    </script>
</body>

